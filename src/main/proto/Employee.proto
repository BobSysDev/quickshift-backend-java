syntax = "proto3";

option csharp_namespace = "GrpcClient";
option java_multiple_files = true;
option java_package = "quickshift.grpc.service";

package org.grpc.service;

import "Generic.proto";
import "Shift.proto";

service Employee{
  rpc AddSingleEmployee (NewEmployeeDTO) returns (EmployeeDTO); //Throws ALREADY_EXISTS if it detects a duplicate working number
  rpc GetSingleEmployeeById (Id) returns (EmployeeDTO); //Throws NOT_FOUND if employee with this ID was not found
  rpc GetAllEmployees (Empty) returns (EmployeeDTOList);
  rpc GetManyEmployeesByName (GenericTextMessage) returns (EmployeeDTOList);
  rpc UpdateSingleEmployee (UpdateEmployeeDTO) returns (EmployeeDTO); //Throws NOT_FOUND if employee with this it was not found, or ALREADY_EXISTS if the new working number collides with another employee
  rpc DeleteSingleEmployee (Id) returns (GenericTextMessage); //Throws NOT_FOUND if employee with this ID was not found
  rpc IsEmployeeInRepository (Id) returns (Boolean);
  rpc GetSingleEmployeeByWorkingNumber (WorkingNumber) returns (EmployeeDTO); //Throws NOT_FOUND if employee with this Employee Number was not found
}

message EmployeeDTO {
  sint64 Id = 1;
  string FirstName = 2;
  string LastName = 3;
  uint32 WorkingNumber = 4;
  string Email = 5;
  string Password = 6;
  ShiftDTOList AssignedShifts = 7;
}

message NewEmployeeDTO {
  string FirstName = 1;
  string LastName = 2;
  uint32 WorkingNumber = 3;
  string Email = 4;
  string Password = 5;
}

message UpdateEmployeeDTO {
  sint64 Id = 1;
  string FirstName = 2;
  string LastName = 3;
  uint32 WorkingNumber = 4;
  string Email = 5;
  string Password = 6;
}

message EmployeeDTOList {
  repeated EmployeeDTO dtos = 1;
}

message WorkingNumber{
  uint32 WorkingNumber = 1;
}
